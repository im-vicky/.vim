syntax on
set incsearch
set visualbell
set noerrorbells
set highlightedyank
set relativenumber
set number
set ignorecase
set smartcase
set scrolloff=3 " 3 lines above/below cursor when scrolling
set showmode

" Emulated Plugins
set surround
set easymotion
set NERDTree
set commentary
set argtextobj
set ReplaceWithRegister
set textobj-entire
set multiple-cursors


" Copy to system clipboard as well
set clipboard+=unnamed

" Use Idea to join lines smartly
set ideajoin

" let mapleader = ","
let mapleader = " "
" let maplocalleader = ","

" let g:EasyMotion_override_acejump = 0

imap jj <Esc>
imap kk <Esc>

" These create newlines like o and O but stay in normal mode
nmap H ^
nmap L $
nmap J 10gj
nmap K 10gk
nmap m :action MethodDown<cr>
nmap M :action MethodUp<cr>
nmap U :action $Redo<cr>
nmap R :action Replace<cr>
" NERDTree Toggle"
nmap <leader>n :NERDTreeToggle<cr>
" Closing tabs
nmap <leader>q :action CloseContent<cr>
nmap <leader>Q :action ReopenClosedTab<cr>
" Navigating errors
nmap <leader>e :action GotoNextError<cr>
nmap <leader>E :action GotoPreviousError<cr>
nmap <leader>h :action JumpToLastChange<cr>
nmap <leader>l :action JumpToNextChange<cr>
nmap <leader>f /
nmap ( :action PreviousTab<cr>
nmap ) :action NextTab<cr>
nmap <leader>isj o<Esc>k
nmap <leader>isk O<Esc>j
nmap s <leader><leader>s

" To navigate between split panes
nmap <leader>wj :action NextSplitter<cr>
nmap <leader>wk :action PrevSplitter<cr>

" Splits manipulation
nmap <leader>wh :action SplitHorizontally<cr>
nmap <leader>wv :action SplitVertically<cr>
nmap <leader>wc :action Unsplit<cr>
nmap <leader>wC :action UnsplitAll<cr>
nmap <leader>wd :action OpenEditorInOppositeTabGroup<cr>

" Refactorings
nmap <leader>re :action RenameElement<cr>
nmap <leader>rg :action Generate<cr>

" VCS operations
"nmap <leader>gc :action Vcs.Show.Local.Changes<cr>
nmap <leader>ga :action Vcs.QuickListPopupAction<cr>
nmap <leader>gl :action Vcs.Show.Log<cr>
nmap <leader>gd :action Compare.LastVersion<cr>


" Terminal
 nmap <leader>T :action ActivateTerminalToolWindow<cr>

" Building, Running and Debugging
nmap ,r :action Run<cr>
nmap ,d :action Debug<cr>

vmap H ^
vmap L $
vmap J 10gj
vmap K 10gk
